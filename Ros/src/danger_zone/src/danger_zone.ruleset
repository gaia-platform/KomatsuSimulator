
/////////////////////////////////////////////
// Copyright (c) Gaia Platform LLC
// All rights reserved.
/////////////////////////////////////////////

#include <cmath>

#include "gaia/logger.hpp"

#include "danger_zone.hpp"
#include "zones.hpp"

#define DirectionZoneCodeDefault 6

// Set these to what you want to log, add or subtract at will.
std::vector<std::string> topics{"/image", "/lidar"};

// Set this to an existing directory + desired log name.
std::string log_file_base_name = "~/logs/retrolog";

// Here we define our declarative rules.
//
ruleset danger_zone_ruleset
{
    on_insert(detection)
    {
        // TODO: collect detected objects, fire message, then delete the data from the database.
    }

    on_insert(d_object)
    {
        // Sets the zone using the distance from the sensor to the detected object.
        d_object.zone = zones_t::get_range_zone_id(d_object.pos_x, d_object.pos_y);

        gaia_log::app().info("Object {} setting zone {} ", d_object.object_id, d_object.zone);

        // Find the direction of the object relative to the sensor.
        uint direction_zone = DirectionZoneCodeDefault;

        danger_zone_t::get_callback_class()->cb_send_obstacle_array_message(
            "", d_object.zone, direction_zone,
            d_object.pos_x, d_object.pos_y, d_object.pos_z,
            d_object.size_x, d_object.size_y, d_object.size_z,
            d_object.orient_x, d_object.orient_y, d_object.orient_z, d_object.orient_w,
            d_object.frame_id, d_object.seconds, d_object.nseconds);

        // TODO: we need to debounce this somewhere.
        // TODO: we need to make unique file names, maybe append datetime.

        // TODO disabling because it sends a lot of noisy messages, not sure if this is working.
//        if (roi_zone == zones_t::c_red_zone)
//        {
//            danger_zone_t::get_callback_class()->cb_trigger_log(
//                5, 25, log_file_base_name, topics);
//        }
    }

    on_update(d_object.zone)
    {
//        gaia_log::app().info("Object {} is in zone {}", d_object.object_id, d_object.zone);
    }
}
