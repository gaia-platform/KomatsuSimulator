//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Vision
{
    [Serializable]
    public class ObjectHypothesisWithPoseMsg : Message
    {
        public const string k_RosMessageName = "vision_msgs/ObjectHypothesisWithPose";
        public override string RosMessageName => k_RosMessageName;

        //  An object hypothesis that contains position information.
        //  The unique ID of the object class. To get additional information about
        //    this ID, such as its human-readable class name, listeners should perform a
        //    lookup in a metadata database. See vision_msgs/VisionInfo.msg for more detail.
        public string id;
        //  The probability or confidence value of the detected object. By convention,
        //    this value should lie in the range [0-1].
        public double score;
        //  The 6D pose of the object hypothesis. This pose should be
        //    defined as the pose of some fixed reference point on the object, such a
        //    the geometric center of the bounding box or the center of mass of the
        //    object.
        //  Note that this pose is not stamped; frame information can be defined by
        //    parent messages.
        //  Also note that different classes predicted for the same input data may have
        //    different predicted 6D poses.
        public Geometry.PoseWithCovarianceMsg pose;

        public ObjectHypothesisWithPoseMsg()
        {
            this.id = "";
            this.score = 0.0;
            this.pose = new Geometry.PoseWithCovarianceMsg();
        }

        public ObjectHypothesisWithPoseMsg(string id, double score, Geometry.PoseWithCovarianceMsg pose)
        {
            this.id = id;
            this.score = score;
            this.pose = pose;
        }

        public static ObjectHypothesisWithPoseMsg Deserialize(MessageDeserializer deserializer) => new ObjectHypothesisWithPoseMsg(deserializer);

        private ObjectHypothesisWithPoseMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.id);
            deserializer.Read(out this.score);
            this.pose = Geometry.PoseWithCovarianceMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.id);
            serializer.Write(this.score);
            serializer.Write(this.pose);
        }

        public override string ToString()
        {
            return "ObjectHypothesisWithPoseMsg: " +
            "\nid: " + id.ToString() +
            "\nscore: " + score.ToString() +
            "\npose: " + pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
