//Do not edit! This file was generated by Unity-ROS MessageGeneration.

using System;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DangerZone
{
    [Serializable]
    public class ObstacleMsg : Message
    {
        public const string k_RosMessageName = "danger_zone_msgs/Obstacle";

        public const byte RED = 0;
        public const byte YELLOW = 1;
        public const byte GREEN = 2;
        public const byte FRONT_RIGHT = 0;
        public const byte SIDE_RIGHT = 1;
        public const byte BACK_RIGHT = 2;
        public const byte BACK_LEFT = 3;
        public const byte SIDE_LEFT = 4;
        public const byte FRONT_LEFT = 5;
        public string type;
        public Vision.BoundingBox3DMsg bounds;
        public byte roi;
        public byte direction;

        public ObstacleMsg()
        {
            this.type = "";
            this.bounds = new Vision.BoundingBox3DMsg();
            this.roi = 0;
            this.direction = 0;
        }

        public ObstacleMsg(string type, Vision.BoundingBox3DMsg bounds, byte roi, byte direction)
        {
            this.type = type;
            this.bounds = bounds;
            this.roi = roi;
            this.direction = direction;
        }

        private ObstacleMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.type);
            this.bounds = Vision.BoundingBox3DMsg.Deserialize(deserializer);
            deserializer.Read(out this.roi);
            deserializer.Read(out this.direction);
        }

        public override string RosMessageName => k_RosMessageName;

        public static ObstacleMsg Deserialize(MessageDeserializer deserializer) => new ObstacleMsg(deserializer);

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.type);
            serializer.Write(this.bounds);
            serializer.Write(this.roi);
            serializer.Write(this.direction);
        }

        public override string ToString()
        {
            return "ObstacleMsg: " +
                   "\ntype: " + type.ToString() +
                   "\nbounds: " + bounds.ToString() +
                   "\nroi: " + roi.ToString() +
                   "\ndirection: " + direction.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}